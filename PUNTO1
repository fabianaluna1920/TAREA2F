/* 1. Un cuadrado magico es un arreglo bidimiensional de NxN que se caracteriza porque la suma de los elementos de sus filas,
	de sus columnas y de sus diagonales (las dos diagonales) es igual, es decir, la suma de los elementos de la fila 1 tiene que
	ser igual a la suma de los elementos de la columna 3 y por ende igual a la suma de los elementos de la diagonal 1 y la diagonal 2
	
	Elabore una funcion que verifique que un arreglo de dimensiones 8x8 (magic_square) es un cuadrado magico, debe verificar la suma de 
	los elementos de cada una de las filas, la suma de los elementos de cada una de las columnas y la suma de los elementos de las dos
	diagonales. La funcion debe retornar un valor entero que es 0 si el arreglo no es magico y 1 si es magico. La funcion debe recibir
	como parametro de entrada un arreglo de tipo entero de dimensiones 8x8. La funcion debe llamarse checkMagicArray y debe declararla
	antes de la funcion main y debe definirla despues de la funcion main
*/
	

#include <iostream>
#include<math.h>


using namespace std;

int checkMagicArray(int array[8][8]);

int main ()
{
    int matriz=0;
    int N[8][8] =
    {{64,2,3,61,60,6,7,57},
     {9,55,54,12,13,51,50,16},
     {17,47,46,20,21,43,42,24},
     {40,26,27,37,36,30,31,33},
     {32,34,35,29,28,38,39,25},
     {41,23,22,44,45,19,18,48},
     {49,15,14,52,53,11,10,56},
     {8,58,59,5,4,62,63,1}};
    int longitud=sizeof(N)/sizeof(*N);


    // Ingreso de la Matriz y Observaci√≥n
    cout<<"Su Matriz Es:"<<endl;

    for (int i = 0; i <(longitud=sizeof(N)/sizeof(*N)); i++)
    {
        for (int j = 0; j <(longitud=sizeof(N)/sizeof(*N)); j++)
        {
            matriz=N[i][j];
            cout<<N[i][j]<<"\t";
        }
        cout << endl;//salto de division de fila
    }
    cout << endl;
    checkMagicArray(N);

    return 0;
}


int checkMagicArray(int arreglo[8][8])
{
    int sumaDiag1 = 0, sumaDiag2 = 0;
    int horizontal;
    int vertical;
    int sumafila,sumacolumna;
    bool magico_o_no=false;
    int matriz=0;
    int longitud=sizeof(arreglo)/sizeof(*arreglo);

    for (int i = 0; i <(longitud=sizeof(arreglo)/sizeof(*arreglo)); i++)
    {
        for (int j = 0; j <(longitud=sizeof(arreglo)/sizeof(*arreglo)); j++)
        {
            matriz=arreglo[i][j]=0;
            cout<<arreglo[i][j]<<"\t";
        }
        cout << endl;
    }
    //Suma de las Filas y Columnas
    //fila:
    for(int fila=0;fila<8;fila++)
    {
        sumafila=0;
        for(int columna=0;columna<8;columna++)
        {
            sumafila+=arreglo[fila][columna];
        }
        vertical=sumafila;
        if(vertical!=260)
        {
            cout<<"No Es Un Cuadrado Magico"<<endl;
            return 0;
        }
    }
  //    cout<<(vertical)<<endl;
    //columna:
    for(int columna=0;columna<8;columna++)
    {
        sumacolumna=0;
        for(int fila=0;fila<8;fila++)
        {
            sumacolumna+=arreglo[fila][columna];
        }
        horizontal=sumacolumna;
        if(horizontal!=260)
        {
            cout<<"No Es Un Cuadrado Magico"<<endl;
            return 0;
        }
    }
    //   cout<<(horizontal)<<endl;

       //diagonales
    for(int i=0;i<8;++i)
    {
        for(int j=0;j<8;++j)
        {
            if(i==j)
                sumaDiag1+=arreglo[i][j];
            if(i+j==8-1)
                sumaDiag2+=arreglo[i][j];
        }
    }
    if(sumaDiag1!=260 || sumaDiag2!=260)
    {
        magico_o_no=false;
        cout<<magico_o_no<<", No Es Un Cuadrado Magico"<<endl;
    }
    else
    {
        magico_o_no=true;
        cout<<magico_o_no<<", Es Un Cuadrado Magico"<<endl;
    }



        return matriz;
}
